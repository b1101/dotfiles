[colors]
;Base16 Tomorrow Night
base00 = ${xrdb:base00:#1d1f21}
base01 = ${xrdb:base01:#282a2e}
base02 = ${xrdb:base02:#373b41}
base03 = ${xrdb:base03:#969896}
base04 = ${xrdb:base04:#b4b7b4}
base05 = ${xrdb:base05:#c5c8c6}
base06 = ${xrdb:base06:#e0e0e0}
base07 = ${xrdb:base07:#ffffff}
base08 = ${xrdb:base08:#cc6666}
base09 = ${xrdb:base09:#de935f}
base0A = ${xrdb:base0A:#f0c674}
base0B = ${xrdb:base0B:#b5bd68}
base0C = ${xrdb:base0C:#8abeb7}
base0D = ${xrdb:base0D:#81a2be}
base0E = ${xrdb:base0E:#b294bb}
base0F = ${xrdb:base0F:#a3685a}

foreground = ${xrdb:foreground:#b4b7b4}
foreground-alt = ${xrdb:foreground-alt:#ffffff}
background = ${xrdb:background:#1d1f21}

[settings]
; The throttle settings lets the eventloop swallow up til X events
; if they happen within Y millisecond after first event was received.
; This is done to prevent flood of update event.
;
; For example if 5 modules emit an update event at the same time, we really
; just care about the last one. But if we wait too long for events to swallow
; the bar would appear sluggish so we continue if timeout
; expires or limit is reached.
throttle-output = 5
throttle-output-for = 10

; Time in milliseconds that the input handler will wait between processing events
throttle-input-for = 30

; Reload upon receiving XCB_RANDR_SCREEN_CHANGE_NOTIFY events
screenchange-reload = true

; Compositing operators
; @see: https://www.cairographics.org/manual/cairo-cairo-t.html#cairo-operator-t
compositing-background = over
compositing-foreground = over
compositing-overline = over
compositing-underline = over
compositing-border = over


; Define fallback values used by all module formats
format-foreground =
format-background =
format-underline =
format-overline =
format-spacing =
format-padding = 1
format-margin =
format-offset =

[global/wm]
margin-top = 0
margin-bottom = 3

[bar/top]
font-0 = Hurmit Nerd Font:size=12;2
font-1 = Hurmit Nerd Font:size=13;1
font-2 = Symbola:size=10;0
font-3 = Unifont:size=10;0

; Use the following command to list available outputs:
; If unspecified, the application will pick the first one it finds.
; $ xrandr -q | grep " connected" | cut -d ' ' -f1
monitor = ${env:MONITOR:DP1}

; Use the specified monitor as a fallback if the main one is not found.
;monitor-fallback = eDP1

; Require the monitor to be in connected state
; XRandR sometimes report my monitor as being disconnected (when in use)
monitor-strict = false

; Tell the Window Manager not to configure the window.
; Use this to detach the bar if your WM is locking its size/position.
override-redirect = false

; Put the bar at the bottom of the screen
bottom = false

; Prefer fixed center position for the `modules-center` block
; When false, the center position will be based on the size of the other blocks.
fixed-center = true

; Dimension defined as pixel value (e.g. 35) or percentage (e.g. 50%)
;width = 100%
height = 22

; Offset defined as pixel value (e.g. 35) or percentage (e.g. 50%)
;offset-x = 0
;offset-y = 0

; Background argb color (e.g. #f00, #ff992a, #ddff1023)
background = ${colors.background}

; Foreground argb color (e.g. #f00, #ff992a, #ddff1023)
foreground = ${colors.foreground}

; Background gradient (vertical steps)
;   background-[0-9]+ = #aarrggbb
;background-0 = 

; Value used for drawing rounded corners
; Individual top/bottom values can be defined using:
;   radius-{top,bottom}
;radius = 0.0

; Under-/overline pixel size and argb color
; Individual values can be defined using:
;   {overline,underline}-size
;   {overline,underline}-color
;overline-size = 0
;overline-color = ${colors.base05}
;underline-size = 0
;underline-color = ${colors.base05}

; Values applied to all borders
; Individual side values can be defined using:
;   border-{left,top,right,bottom}-size
;   border-{left,top,right,bottom}-color
;border-bottom-size = 0
;border-bottom-color = ${colors.base01}
;border-top-size = 0
;border-top-color = ${colors.base00}
;border-color-foreground = ${colors.base08}

; Number of spaces to add at the beginning/end of the bar
; Individual side values can be defined using:
;   padding-{left,right}
padding-left = 0
padding-right = 0

; Number of spaces to add before/after each module
; Individual side values can be defined using:
;   module-margin-{left,right}
module-margin-left = 0
module-margin-right = 0

; The separator will be inserted between the output of each module
;separator = |

; Opacity value between 0.0 and 1.0 used on fade in/out
dim-value = 1.0

; Value to be used to set the WM_NAME atom
; If the value is empty or undefined, the atom value
; will be created from the following template: polybar-[BAR]_[MONITOR]
; NOTE: The placeholders are not available for custom values
;wm-name =

; Locale used to localize various module data (e.g. date)
; Expects a valid libc locale, for example: sv_SE.UTF-8
;locale = 

; Position of the system tray window
; If empty or undefined, tray support will be disabled
; NOTE: A center aligned tray will cover center aligned modules
;
; Available positions:
;   left
;   center
;   right
tray-position = right

; If true, the bar will not shift its
; contents when the tray changes
tray-detached = false

; Tray icon max size
tray-maxsize = 16

; Enable pseudo transparency
; Will automatically be enabled if a fully transparent
; background color is defined using `tray-background`
tray-transparent = false

; Background color for the tray container
; By default the tray container will use the bar
; background color.
; Note: 32 bit alpha blending is not supported.
tray-background = ${root.background}

; Tray offset defined as pixel value (e.g. 35) or percentage (e.g. 50%)
tray-offset-x = 0
tray-offset-y = 0

; Pad the sides of each tray icon
tray-padding = 0

; Scale factor for tray clients
tray-scale = 1.0

; Restack the bar window and put it above the
; selected window manager's root
;
; Fixes the issue where the bar is being drawn
; on top of fullscreen window's
;
; Currently supported WM's:
;   bspwm
;   i3 (requires: `override-redirect = true`)
wm-restack = bspwm

; Enable support for inter-process messaging
; See the Messaging wiki page for more details.
enable-ipc = false

; Fallback click handlers that will be called if
; there's no matching module handler found.
click-left = 
click-middle = 
click-right =
scroll-up =
scroll-down =
double-click-left =
double-click-middle =
double-click-right =

; Requires polybar to be built with xcursor support (xcb-util-cursor)
; Possible values are:
; - default   : The default pointer as before, can also be an empty string (default)
; - pointer   : Typically in the form of a hand
; - ns-resize : Up and down arrows, can be used to indicate scrolling
cursor-click = 
cursor-scroll = 

;modules-left = bspwm RightArrow1 RightStripe RightArrow1 powermenu xwindow
;modules-center = MiddleArrowLeft date MiddleArrowRight
;modules-right = arrow1 LeftStripe arrow1 volume arrow2 network arrow3 cpu arrow2 memory arrow3 filesystem arrow2 temperature arrow3 battery

modules-left = lock bspwm mpd
modules-center = xwindow
modules-right = volume xkeyboard wifi eth temperature cpu memory battery0 battery1 date

[bar/top-small]
inherit = bar/top
modules-left = lock bspwm mpd-short
modules-center = xwindow-short
modules-right = volume xkeyboard wifi-short temperature cpu memory battery0 battery1 date
tray-position =

[bar/top-small-tray]
inherit = bar/top-small
tray-position = right

[bar/top-big]
inherit = bar/top
tray-position =

[bar/top-big-tray]
inherit = bar/top-big
tray-position = right

[module/bspwm]
type = internal/bspwm
; Only show workspaces defined on the same output as the bar
; NOTE: The bspwm and XRandR monitor names must match, which they do by default.
; Default: true
pin-workspaces = false

; Output mode flags after focused state label
; Default: false
inline-mode = false

; Create click handler used to focus workspace
; Default: true
enable-click = true

; Create scroll handlers used to cycle workspaces
; Default: true
enable-scroll = false

; Set the scroll cycle direction 
; Default: true
reverse-scroll = false

; Use fuzzy (partial) matching on labels when assigning 
; icons to workspaces
; Example: code;♚ will apply the icon to all workspaces 
; containing 'code' in the label
; Default: false
fuzzy-match = true

; ws-icon-[0-9]+ = label;icon
; Note that the label needs to correspond with the bspwm workspace name
;ws-icon-0 = code;♚
;ws-icon-1 = office;♛
;ws-icon-2 = graphics;♜
;ws-icon-3 = mail;♝
;ws-icon-4 = web;♞
;ws-icon-default = ♟

; Available tags:
;   <label-monitor>
;   <label-state> - gets replaced with <label-(focused|urgent|occupied|empty)>
;   <label-mode> - gets replaced with <label-(monocle|tiled|fullscreen|floating|locked|sticky|private)>
; Default: <label-state>
format = <label-state>
format-spacing = 1

; Available tokens:
;   %name%
; Default: %name%
label-monitor = %name%

; If any values for label-dimmed-N are defined, the workspace/mode
; colors will get overridden with those values if the monitor is out of focus
; To only override workspaces in a specific state, use:
;   label-dimmed-focused
;   label-dimmed-occupied
;   label-dimmed-urgent
;   label-dimmed-empty
label-dimmed-foreground = ${colors.base02}

; Available tokens:
;   %name%
;   %icon%
;   %index%
; Default: %icon%  %name%
label-focused = 
label-focused-padding = 1
label-focused-font = 2

; Available tokens:
;   %name%
;   %icon%
;   %index%
; Default: %icon%  %name%
label-occupied = 
label-occupied-padding = 1
label-occupied-font = 2

; Available tokens:
;   %name%
;   %icon%
;   %index%
; Default: %icon%  %name%
label-urgent = 
label-urgent-padding = 1
label-urgent-font = 2

; Available tokens:
;   %name%
;   %icon%
;   %index%
; Default: %icon%  %name%
label-empty = 
label-empty-padding = 1
label-empty-font = 2

; The following labels will be used to indicate the layout/mode
; for the focused workspace. Requires <label-mode>
;
; Available tokens:
;   None
;label-monocle = 
;label-tiled = 
;label-fullscreen = 
;label-floating = 
;label-pseudotiled = P
;label-locked = 
;label-locked-foreground = #bd2c40
;label-sticky = 
;label-sticky-foreground = #fba922
;label-private = 
;label-private-foreground = #bd2c40

; Separator in between workspaces
;label-separator = |
;label-separator-padding = 2
;label-separator-foreground = #ffb52a

[module/mpd]
type = internal/mpd
interval = 1

; Available tags:
;   <label-song> (default)
;   <label-time>
;   <bar-progress>
;   <toggle> - gets replaced with <icon-(pause|play)>
;   <toggle-stop> - gets replaced with <icon-(stop|play)>
;   <icon-random>
;   <icon-repeat>
;   <icon-repeatone>
;   <icon-consume>
;   <icon-prev>
;   <icon-stop>
;   <icon-play>
;   <icon-pause>
;   <icon-next>
;   <icon-seekb>
;   <icon-seekf>

format-playing = <icon-prev> <icon-seekb> <toggle> <icon-seekf> <icon-next> <bar-progress> <label-song> (<label-time>)
format-paused = <icon-prev> <icon-seekb> <toggle> <icon-seekf> <icon-next> <bar-progress> <label-song> (<label-time>)
format-stopped = <icon-prev> <toggle> <icon-next>
format-offline =  Failed to connect to MPD daemon

;format-online-padding = 5
format-playing-padding = 5
format-paused-padding = 5
format-stopped-padding = 5
format-offline-padding = 5

;format-online-foreground = ${colors.foreground-alt}
format-playing-foreground = ${colors.foreground-alt}
format-paused-foreground = ${colors.foreground-alt}
format-stopped-foreground = ${colors.foreground-alt}
format-offline-foreground = ${colors.base08}

label-song = %title:5:30:...% // %artist:5:35:...%
label-song-maxlen = 64

icon-play = 
icon-pause = 
icon-stop = 
icon-prev = 
icon-next = 
icon-seekb = 
icon-seekf = 
icon-random = 
icon-repeat = 

;toggle-on-foreground = ${colors.base0A}

bar-progress-width = 10
bar-progress-format = %{A4:mpdseek+2: A5:mpdseek-2:}%fill%%indicator%%empty%%{A A}
bar-progress-indicator = |
bar-progress-fill = ─
bar-progress-empty = ─
bar-progress-empty-foreground = ${colors.base03}

[module/mpd-short]
inherit = module/mpd

format-playing = <icon-prev> <toggle> <icon-next> <label-song>
format-paused = <icon-prev> <toggle> <icon-next> <label-song>
format-stopped = <icon-prev> <toggle> <icon-next>
format-offline = 

label-song-maxlen = 16

[module/xwindow]
type = internal/xwindow

; Available tokens:
;   %title%
; Default: %title%
label = %title:10:40:...%

[module/xwindow-short]
inherit = module/xwindow

label = %title:10:10:...%

[module/volume]
type = internal/volume

; Soundcard to be used
; Usually in the format hw:#
master-soundcard = default
speaker-soundcard = default
headphone-soundcard = default

; Name of the master mixer
; Default: Master
master-mixer = Master

; Optionally define speaker and headphone mixers
; Use the following command to list available mixer controls:
; $ amixer scontrols | sed -nr "s/.*'([[:alnum:]]+)'.*/\1/p"
; Default: none
;speaker-mixer = Speaker
; Default: none
;headphone-mixer = Headphone

; NOTE: This is required if headphone_mixer is defined
; Use the following command to list available device controls
; $ amixer controls | sed -r "/CARD/\!d; s/.*=([0-9]+).*name='([^']+)'.*/printf '%3.0f: %s\n' '\1' '\2'/e" | sort
; Default: none
;headphone-id = 9

; Use volume mapping (similar to amixer -M and alsamixer), where the increase in volume is linear to the ear
; Default: false
;mapped = true

;     
; Available tags:
;   <label-volume> (default)
;   <ramp-volume>
;   <bar-volume>
;format-volume = <ramp-volume> <label-volume>
format-volume = <ramp-volume> <label-volume> 

; Available tags:
;   <label-muted> (default)
;   <ramp-volume>
;   <bar-volume>
format-muted = <label-muted>
format-muted-foreground = ${colors.base09}

; Available tokens:
;   %percentage% (default)
;label-volume = %percentage%%

; Available tokens:
;   %percentage% (default)
label-muted = " muted"

; Only applies if <ramp-volume> is used
ramp-volume-0 = ""
ramp-volume-1 = ""
ramp-volume-2 = ""
ramp-volume-3 = ""

; If defined, it will replace <ramp-volume> when
; headphones are plugged in to `headphone_control_numid`
; If undefined, <ramp-volume> will be used for both
; Only applies if <ramp-volume> is used
;ramp-headphones-0 = 
;ramp-headphones-1 = 

[module/xkeyboard]
type = internal/xkeyboard
blacklist-0 = num lock
blacklist-1 = scroll lock

; Available tags:
;   <label-layout> (default)
;   <label-indicator> (default)
format =  <label-layout> <label-indicator>

; Available tokens:
;   %layout%
;   %name%
;   %number%
; Default: %layout%
label-layout = %layout%

; Available tokens:
;   %name%
; Default: %name%
label-indicator = %name%

format-foreground = ${colors.foreground-alt}

[module/network]
type = internal/network
interval = 3.0
ping-interval = 10

; Available tags:
;   <label-connected> (default)
;   <ramp-signal>
format-connected = <label-connected>

; Available tags:
;   <label-disconnected> (default)
format-disconnected = <label-disconnected>

; Available tags:
;   <label-connected> (default)
;   <label-packetloss>
;   <animation-packetloss>
;format-packetloss = <animation-packetloss> <label-connected>
format-packetloss-foreground = ${colors.base09}

; Available tokens:
;   %ifname%    [wireless+wired]
;   %local_ip%  [wireless+wired]
;   %essid%     [wireless]
;   %signal%    [wireless]
;   %upspeed%   [wireless+wired]
;   %downspeed% [wireless+wired]
;   %linkspeed% [wired]
; Default: %ifname% %local_ip%
label-connected =  %local_ip%@%essid%

; Available tokens:
;   %ifname%    [wireless+wired]
; Default: (none)
label-disconnected =  not connected
label-disconnected-foreground = ${colors.base09}

[module/wifi]
inherit = module/network
interface = wlp4s0

format-connected-prefix = " "
format-disconnected-prefix = " "
format-packetloss-prefix = " "

label-connected = %local_ip%@%essid%
label-disconnected = not connected

[module/wifi-short]
inherit = module/wifi

label-connected = %essid:5:5:...%
label-disconnected = n/c

[module/eth]
inherit = module/network
interface = enp0s31f6

format-connected-prefix = " "
format-disconnected-prefix = " "
format-packetloss-prefix = " "

label-connected = %local_ip%
label-disconnected = not connected

format-connected-foreground = ${colors.foreground-alt}
format-packetloss-foreground = ${colors.base08}

[module/cpu]
type = internal/cpu
interval = 1

; Available tags:
;   <label> (default)
;   <bar-load>
;   <ramp-load>
;   <ramp-coreload>
;format = <label> <ramp-load>
format = <label>
format-foreground = ${colors.foreground-alt}

; Available tokens:
;   %percentage% (default) - total cpu load
;   %percentage-cores% - load percentage for each core
;   %percentage-core[1-9]% - load percentage for specific core
label =  %percentage:2:2%%

ramp-load-0 = ▁
ramp-load-1 = ▂
ramp-load-2 = ▃
ramp-load-3 = ▄
ramp-load-4 = ▅
ramp-load-5 = ▆
ramp-load-6 = ▇
ramp-load-7 = █

[module/memory]
type = internal/memory
interval = 1

; Available tags:
;   <label> (default)
;   <bar-used>
;   <bar-free>
format =  <label>

; Available tokens:
;   %percentage_used% (default)
;   %percentage_free%
;   %gb_used%
;   %gb_free%
;   %gb_total%
;   %mb_used%
;   %mb_free%
;   %mb_total%
label = %percentage_used:2:2%%


[module/temperature]
type = internal/temperature

; Seconds to sleep between updates
; Default: 1
interval = 0.5

; Thermal zone to use
; To list all the zone types, run 
; $ for i in /sys/class/thermal/thermal_zone*; do echo "$i: $(<$i/type)"; done
; Default: 0
thermal-zone = 0

; Full path of temperature sysfs path
; Use `sensors` to find preferred temperature source, then run
; $ for i in /sys/class/hwmon/hwmon*/temp*_input; do echo "$(<$(dirname $i)/name): $(cat ${i%_*}_label 2>/dev/null || echo $(basename ${i%_*})) $(readlink -f $i)"; done
; to find path to desired file
; Default reverts to thermal zone setting
hwmon-path = /sys/devices/platform/coretemp.0/hwmon/hwmon3/temp1_input

; Threshold temperature to display warning label
; Default: 80
warn-temperature = 75

format = <ramp> <label>
format-warn = <ramp> <label-warn>
format-warn-foreground = ${colors.base09}

label = %temperature%
label-warn = %temperature%

ramp-0 = 
ramp-1 = 
ramp-2 = 
ramp-3 = 
ramp-4 = 



[module/battery]
type = internal/battery
; To list battery & adapter: $ ls -1 /sys/class/power_supply/
;battery = BAT0
adapter = AC
;full-at = 84

; see "man date" for details on how to format the time string
; NOTE: if you want to use syntax tags here you need to use %%{...}
; Default: %H:%M:%S
time-format = %H:%M

; Available tags:
;   <label-charging> (default)
;   <bar-capacity>
;   <ramp-capacity>
;   <animation-charging>
format-charging = <animation-charging> <label-charging>

; Available tags:
;   <label-discharging> (default)
;   <bar-capacity>
;   <ramp-capacity>
format-discharging = <ramp-capacity> <label-discharging>

; Available tags:
;   <label-full> (default)
;   <bar-capacity>
;   <ramp-capacity>
format-full = <ramp-capacity> <label-full>

; Available tokens:
;   %percentage% (default)
;   %time%
;   %consumption% (shows current charge rate in watts)
label-charging = %percentage%%(%time%)

; Available tokens:
;   %percentage% (default)
;   %time%
;   %consumption% (shows current discharge rate in watts)
label-discharging = %percentage%%(%time%)

; Available tokens:
;   %percentage% (default)
label-full = %percentage%%

ramp-capacity-0 = 
ramp-capacity-0-foreground = ${colors.base08}
ramp-capacity-1 = 
ramp-capacity-1-foreground = ${colors.base09}
ramp-capacity-2 = 
ramp-capacity-3 = 
ramp-capacity-4 = 
animation-charging-0 = 
animation-charging-1 = 
animation-charging-2 = 
animation-charging-3 = 
animation-charging-4 = 
animation-charging-framerate = 1000

[module/battery0]
inherit = module/battery
battery = BAT0
full-at = 75

format-charging-foreground = ${colors.foreground-alt}
format-discharging-foreground = ${colors.foreground-alt}
format-full-foreground = ${colors.foreground-alt}

[module/battery1]
inherit = module/battery
battery = BAT1
full-at = 75

[module/date]
type = internal/date
interval = 1

; Available tags:
;   <label> (default)
format =  <label>
format-foreground = ${colors.foreground-alt}

time = "%H:%M:%S"
time-alt = "%Y/%m/%d %H:%M:%S"

; Available tokens:
;   %date%
;   %time%
; Default: %date%
label = "%time%"

[module/lock]
type = custom/text
content = 
click-left = xautolock -locknow
click-middle = xautolock -locknow
click-right = xautolock -locknow

; vim:ft=dosini
