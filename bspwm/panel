#! /bin/sh

sleepFor=1

source $(dirname $0)/config
    
if xdo id -a "$WM_NAME" > /dev/null ; then
    printf "%s\n" "The panel is already running." >&2
    exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

bspc config top_padding $HEIGHT
bspc subscribe |\
    grep -oE "[Mm][^TM]*[TML]" --line-buffered |\
    while read line; do echo W$line; done > "$PANEL_FIFO" &

# Top left
{
    getName() {
        local ic=$(pIcon ${RED2} ${CSTART})
        local cmd=$(uname -n)
        local clr=$(pText ${WHITE2} "${cmd}")
        echo ${ic} ${clr}
    }

    panelMusic() {
        local icp=$(pAction $WHITE2 $RED "mpc prev &>/dev/null" ${CPREV})
        local icn=$(pAction $WHITE2 $RED "mpc next &>/dev/null" ${CNEXT})
        local icpl=$(pAction $WHITE2 $RED "mpc play &>/dev/null" ${CPLAY})
        local icpa=$(pAction $WHITE2 $RED "mpc pause &>/dev/null" ${CPAUS})
        echo "$icp $icn $icpl $icpa"
    }

    music() {
        local ic=$(pIcon ${RED2} ${CSOUND})
        local status=$(mpc current)
        if [ "$status" ] ; then
            local artist=$(mpc -f %artist% current)
            local musicname=$(mpc -f %title% current)
            local clr1=$(pText ${BLUE2} "${artist}")
            local clr2=$(pText ${CYAN2} "${musicname:0:20}")
            echo ${ic} ${clr1} ${clr2}
        else
            echo ${ic} %{F${RED}}No Sound%{F-}
        fi
    }

    volume() {
        local cmd=$(amixer sget Master | awk -F '[][]' '{ print $4 }' | tail -1 )
        local ic=""
        local clr=""
        if [ "$cmd" = "on" ]; then
            local vol=$(amixer sget Master | awk -F '[][]' '{ print $2 }' | tail -1 )
            ic=$(pIcon ${RED2} ${CVOLUME})
            clr=$(pText ${YELLOW} "${vol}")
        else
            ic=$(pIcon ${RED2} ${CMUTED})
            clr=$(pText ${YELLOW} muted)
        fi
        echo ${ic} ${clr}
    }

    mic() {
        local cmd=$(amixer)
    }

    while :; do
        #echo "T$(getName) $(panelMusic) $(music) $(volume)"
        echo "T$(getName) $(volume)"
        sleep $sleepFor
    done

} > "$PANEL_FIFO" &

# Top Right
{
    getDay() {
        local ic=$(pIcon ${RED} ${CDATE})
        local cmd=$(date '+%A %d %b')
        local clr=$(pText ${GREEN2} "${cmd}")
        echo ${ic} ${clr}
    }

    clock() {
        local ic=$(pIcon ${RED2} ${CCLOCK})
        local cmd=$(date +%H:%M)
        local clr=$(pText ${YELLOW} "${cmd}")
        echo ${ic} ${clr}
    }

    mail() {
        local gmaildir=$HOME/.mails/Gmail/\[Gmail\].All\ Mail/new
        local ic=$(pIcon ${RED2} ${CMAIL})
        local count=0
        if [[ ! -n $(ls "${gmaildir}") ]]; then
            count=0
        else
            count=$(ls -1 "${gmaildir}" | wc -l)
        fi
        echo ${ic} ${count}
    }

    energy() {
        local ac=/sys/class/power_supply/AC/online
        local bat=/sys/class/power_supply/BAT0/present
        local icon=""
        local batCap=""
        if [[ -e $bat ]]; then
            batCap="$(cat ${bat%/*}/capacity)"
            [ $batCap -gt 90 ] && icon=$BAT100
            [ $batCap -gt 75 ] && [ $batCap -lt 90 ] && icon=$BAT75
            [ $batCap -gt 50 ] && [ $batCap -lt 75 ] && icon=$BAT50
            [ $batCap -gt 25 ] && [ $batCap -lt 50 ] && icon=$BAT25
            [ $batCap -lt 25 ] && icon=$BAT0
        fi
        if [[ -n $(cat $ac) ]]; then
            batCap="${batCap:-AC}"
            icon=$CAC
        fi
        echo "$(pIcon ${RED2} $icon) $(pText ${WHITE} ${batCap})"
    }

    ram() {
        local ic=$(pIcon ${RED2} ${CRAM})
        local cmd="$(free -m | grep Mem | awk '{print $3}') Mb"
        local clr=$(pText ${MAGENTA2} "${cmd}")
        echo ${ic} ${clr}
    }

    cpu() {
        local ic=$(pIcon ${RED2} ${CCPU})
        #local cmd=$(cat /proc/loadavg | cut -d' ' -f1 )
        #cmd+= $(cat /proc/cpuinfo | grep -i mhz | awk '{ORS=" "}{print $4}'| sed -e 's/.000//g')

        local cmd=$(sensors | grep 'Core ' | awk '{print $3}')
        local clr=$(pText ${WHITE} "${cmd}")
        echo ${ic} ${clr}
    }

    while :; do
        echo "S$(cpu) $(ram) $(energy) $(clock) $(getDay)"
        sleep $sleepFor
    done

} > "$PANEL_FIFO" &

$(dirname $0)/panel_bar < "$PANEL_FIFO" | lemonbar \
    -a 32 \
    -g x$HEIGHT \
    -f "$FONT" \
    -f "$FONT_ICON" \
    -F "$FG" \
    -B "$BG" | sh | while read line; do eval "$line"; done &

wid=$(xdo id -a "$WM_NAME")
tries_left=20

while [ -z "$wid" -a "$tries_left" -gt 0 ] ; do
	sleep 0.05
	wid=$(xdo id -a "$WM_NAME")
	tries_left=$((tries_left - 1))
done

[ -n "$wid" ] && xdo above -t "$(xdo id -N Bspwm -n root | sort | head -n 1)" "$wid"

wait
